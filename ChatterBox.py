# pip install chatterbox-tts
import re

import torch
import torchaudio as ta
from chatterbox.tts import ChatterboxTTS
from pydub import AudioSegment

raw_text = """
Why did the scarecrow win a Nobel Peace Prize? <0.7>
Because he was out standing in his field
"""


pattern = r"<(\d+(\.\d+)?)>"
parts = re.split(pattern, raw_text)

segments = []
i = 0
while i < len(parts):
    text = parts[i].strip()
    pause = float(parts[i + 1]) if i + 1 < len(parts) else None
    if text:
        segments.append((text, pause))
    i += 3

audio_prompt_mp3_path = "voices/sample2.mp3"
audio_prompt_wav_path = "voices/temp_prompt.wav"

audio_prompt = AudioSegment.from_mp3(audio_prompt_mp3_path)
trimmed = audio_prompt.strip_silence(silence_len=500, silence_thresh=-40)
trimmed.export(audio_prompt_wav_path, format="wav")

model = ChatterboxTTS.from_pretrained(device="cuda")

generated_segments = []

for idx, (segment_text, pause_sec) in enumerate(segments):
    print(f"üó£Ô∏è Gener√°l√°s {idx + 1}/{len(segments)}...")

    # Param√©ter	Jelent√©s
    # exaggeration	Hangkifejez√©s t√∫lz√°sa (pl. √©rzelmek feler≈ës√≠t√©se)
    # temperature	V√©letlenszer≈±s√©g m√©rt√©ke ‚Äì magasabb = v√°ltozatosabb
    # cfg_weight	Classifier-Free Guidance s√∫lya ‚Äì a hang √©s sz√∂veg kapcsolat√°t szab√°lyozza
    # min_p, top_p	Mintav√©teli sz≈±r√©s ‚Äì a legval√≥sz√≠n≈±bb tokenek sz≈±r√©se
    # repetition_penalty	Ism√©tl≈ëd√©sek b√ºntet√©se ‚Äì nagyobb √©rt√©k = kevesebb ism√©tl√©s
    # N√∂veld top_p, ha t√∫l "robotikus".
    # Emeld min_p, ha zavar√≥ a t√∫l sok random hang.
    wav = model.generate(
        segment_text,
        audio_prompt_path=audio_prompt_wav_path,
        exaggeration=0.8,
        temperature=1.4,
        cfg_weight=0.4,

        min_p=0.05,
        top_p=1.0,
        repetition_penalty=1.2,
    )

    generated_segments.append(wav)

    if pause_sec:
        pause_samples = int(model.sr * pause_sec)
        pause_tensor = torch.zeros((1, pause_samples))
        generated_segments.append(pause_tensor)

final_wav = torch.cat(generated_segments, dim=1)
temp_wav_path = "voices/temp_output.wav"
ta.save(temp_wav_path, final_wav, model.sr)

audio = AudioSegment.from_wav(temp_wav_path)
audio.export("voices/result.mp3", format="mp3")

sound = AudioSegment.from_wav(temp_wav_path)
slower = sound._spawn(sound.raw_data, overrides={
    "frame_rate": int(sound.frame_rate * 0.98)
}).set_frame_rate(sound.frame_rate)

temp_wav_slower_path = "voices/output_slow.wav"
slower.export(temp_wav_slower_path, format="wav")
audio = AudioSegment.from_wav(temp_wav_slower_path)
audio.export("voices/result_s95.mp3", format="mp3")


# cfg_weight √©rt√©k	Eredm√©ny
# 0.0	Szinte teljesen figyelmen k√≠v√ºl hagyja a sz√∂veget. Olyan, mint egy st√≠lusos improviz√°ci√≥.
# 0.5	Valamennyire k√∂veti a sz√∂veget, de laz√°n.
# 1.0	J√≥ egyens√∫ly a sz√∂veg √©s st√≠lus k√∂zt.
# 2.0 vagy t√∂bb	Nagyon szorosan k√∂veti a sz√∂veget, m√©g ha ez a hangst√≠lus rov√°s√°ra megy is.
# Mikor √°ll√≠ts rajta?
# Amit szeretn√©l	Aj√°nlott cfg_weight
# Nagyobb kreativit√°s, term√©szetes st√≠lus	0.3 ‚Äì 0.7
# Pontos sz√∂vegfelolvas√°s	1.0 ‚Äì 2.0
# Audio prompt "m√°sol√°sa" laz√°n	0.0 ‚Äì 0.5


# temperature √©rt√©kek hat√°sa
# √ârt√©k	Jelent√©s
# 0.0 ‚Äì 0.3	Nagyon determinisztikus. A modell mindig ugyanazt fogja mondani ugyanarra a sz√∂vegre. Nagyon stabil, de "robotikus".
# 0.7 ‚Äì 1.0	Term√©szetesebb, v√°ltozatosabb hangz√°s. N√©h√°ny sz√≥ m√°sk√©nt hangzik, a hangs√∫ly is kicsit elt√©rhet.
# 1.0 ‚Äì 1.5	Kreat√≠v, spont√°n, n√©ha kisz√°m√≠thatatlan besz√©dst√≠lus. J√°t√©kos vagy √©rzelmes hanghoz hasznos lehet.
# > 1.5	Sokszor m√°r t√∫l v√©letlenszer≈±, furcsa vagy hib√°s kiejt√©s is el≈ëfordulhat. Ink√°bb k√≠s√©rletez√©shez.
# Mikor milyen √©rt√©ket haszn√°lj?
# C√©l	Aj√°nlott temperature
# Stabil narr√°ci√≥, felolvas√°s	0.3 ‚Äì 0.6
# Term√©szetes besz√©d, enyhe √©rzelem	0.7 ‚Äì 1.0
# Vicces, √©rzelmes, sz√≠nh√°zi szerep	1.1 ‚Äì 1.5
# K√≠s√©rleti, kisz√°m√≠thatatlan gener√°l√°s	> 1.5


# exaggeration √©rt√©k	Viselked√©s
# 0.0	Szinte teljesen figyelmen k√≠v√ºl hagyja a prompt st√≠lus√°t. Csak semleges hangon olvas.
# 0.5	Finoman ut√°nozza a st√≠lust, term√©szetes m√≥don.
# 1.0 (alap√©rtelmezett)	Kiegyens√∫lyozott: j√≥l √©rz√©kelhet≈ë a st√≠lus, de nem t√∫l sok.
# 1.5 ‚Äì 2.0	Dr√°mai t√∫lj√°tsz√°s, er≈ës √©rzelmi vagy hangs√∫lybeli elt√©r√©sek.
# > 2.0	Lehet t√∫lzott, n√©ha m√°r sz√≠npadias vagy furcsa (k√≠s√©rleti c√©lokra j√≥).
# Haszn√°lati javaslat
# Amit szeretn√©l	Aj√°nlott exaggeration
# Neutr√°lis, visszafogott besz√©d	0.0 ‚Äì 0.5
# Term√©szetes, kiss√© karakteres	0.8 ‚Äì 1.2
# Er≈ëteljes karakter, √©rzelem, sz√≠nh√°z	1.5 ‚Äì 2.5

# C√©l	Javasolt be√°ll√≠t√°sok
# Stabil, megb√≠zhat√≥ kimenet	top_p = 0.8, min_p = 0.05
# Term√©szetes, v√°ltozatos besz√©d	top_p = 0.9‚Äì1.0, min_p = 0.03
# Kreat√≠v, ak√°r furcsa kimenet	top_p = 1.0, min_p = 0.0